CSCB58 Project Report: Summer 2019


Team Member A
-------------
First Name: Raha
Last Name: Gharadaghi
Student Number: 1005150382
UofT E-mail Address: raha.gharadaghi@mail.utoronto.ca




Team Member B
-------------
First Name: Aaren
Last Name: Chu
Student Number 1003898801
UofT E-mail Address: aaren.chu@mail.utoronto.ca


Project Plan
--------


Project Title: DODGE


Provide a one paragraph description of your project:
The program is a game where the player, represented by a square of one colour, has to dodge enemies, represented by squares of a distinctly different colour. The player’s score is gauged by how long the player has successfully avoided colliding with an enemy within a certain timeframe. If the player does collide with an enemy, their score is reset to 0. However, the score will continue increasing until the time is up. The player sprite is controlled by the arrow keys. The score and timer are displayed on the HEX displays.


What is your plan for the first week?
To implement:
* The main display screen
* The structure of the player circle object (i.e. color, position on screen etc.)
* The movement behavior of the player circle (i.e. changing position on screen in 4 directions)
* The control mechanism (i.e. mapping the keyboard arrow keys to the movement behavior)


What is your plan for the second week?
To implement:
* The structure of the enemy circle objects (i.e. color, position on screen etc.)
* The movement behavior of the enemy circles (i.e. changing position on screen randomly)
* The detection of collision between enemy circles and player circle(i.e. calculating the distance between the two different circles and resetting the score to only if a collision has occurred)
* The functionality of timer and score


What is your plan for the third week?
* Continually testing the program to cover all edge cases and everything in between
* Getting ready for presentation of the finalized version of the game


What is your backup plan if things don't work out as planned?
* Keeping the general features that already work as a basis while simplifying some of the game mechanisms (e.g. having one enemy object instead of multiple)
* Removing the score and timer and instead the HEX displays only display a certain number of lives that when the number is 0 then the game will be over.

Weekly Reports
--------------

Week 1:
    We came up with an outline for the various elements of the project and reviewed other projects to see if they have any matching features we can use to expand on them. Also, we debugged the display from lab 6 to incorporate the draw mechanism of our game into the code that we already have. We are still working on putting together the features of the player object.
Week 2:
    We worked on the implementation of the player’s movement with the keys. We are experiencing some problems in terms of transition between states and we are working on debugging the issues we're facing, so we have turned to previous projects to see where our code may be failing.

Week 3:
    We spent some time debugging the issues with the transition between states but we were not able to solve all problems. In order to be able to move on, we decided to refer to past projects and adopt some of their relevant components by reworking them to match our game. We spent the rest of the week combining what we already had with the adopted components. We were able to put the main features together (i.e. player’s movement with keys, enemy’s movement in various directions, collision detection and losing, timer as a score keeper). We are still working on improving the features and debugging the glitches that happen sometimes.

Final Week:
    We cleaned up some of the indentations in our code and fixed the comments as well as the naming conventions in order to match our game's theme more. We managed to implement a levelling system that increases the number of enemies deployed according to the time that has passed.  Unfortunately, there are still some bugs that we were not able to fix in time. Ultimately, our game does function as a dodging game.

References
----------
Our code is based off of “Space Invaders” by Matthew Chau and Zixiong Lin.
Their code is found here: https://github.com/chaumatt/SpaceInvaders
We removed states we didn’t need in our game. We added the ability to move the player vertically. For the extra enemies, we based our code off of what they had and changed the directions of the values. We also calculated the correct values in order to determine collision since now the enemies could hit in all four directions.

We also used the timing counters from “Flappy Box” by Alex Wong, Jiale Yang, Tao Qiu, Tianyu Luo.
Their code is found here:
https://github.com/RarePep8/CSCB58-Project
We used their timer as it was what we needed in order to keep track of how long the player has stayed alive and unhit. We wired the counter to our states in order to keep track of the necessary score to level up. Likewise, we used the hex decoder given by Brian Harrington.


Repo & Video
------------
Git Repository:
https://github.com/aarenchu/DODGE.git

Video:
https://www.youtube.com/watch?v=x8jjO6zkAZw&feature=youtu.be
